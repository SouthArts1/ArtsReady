csv << [
  'User First Name', 'User Last Name', 'User Email',
  'Account Name', 'Physical Address', 'Physical Address 2',
  'City', 'State', 'Zip Code', 'Phone Number', 'Fax Number',
  'Parent Organization', 'Subsidizing Organization',
  'Organizational Status (2 digits)',
  'National Standard Institution Code', 'Other NSI Code',
  'Primary Contact Name', 'Primary Contact Email',
  'Billing First Name', 'Billing Last Name',
  'Billing Address',
  'Billing City', 'Billing State', 'Billing Zip Code',
  'Billing Phone Number', 'Billing Email',
  'Discount Code', 'Payment Type', 'Ends in',
  'First Billing Date', 'First Billing Amount',
  'Next Billing Date Occurs in (Days)', 'Next Billing Amount',
  'Account Expiration Date'
]

@users.includes(:organization => :payments).find_each do |user|
  organization = user.organization
  payment = organization.payment

  payment_fields = payment ? [
    payment.billing_first_name, payment.billing_last_name,
    payment.billing_address,
    payment.billing_city, payment.billing_state, payment.billing_zipcode,
    payment.billing_phone_number, payment.billing_email,
    payment.discount_code && payment.discount_code.discount_code,
    payment.payment_method, payment.payment_number,
    payment.start_date.strftime('%m/%d/%Y'),
    money_from_cents(payment.starting_amount_in_cents),
    payment.days_left_until_rebill,
    money_from_cents(payment.regular_amount_in_cents),
    [payment.expiry_month, payment.expiry_year].compact.join('/')
  ] : Array.new(16)

  csv << [
    user.first_name, user.last_name, user.email,
    organization.name,
    organization.address, organization.address_additional,
    organization.city, organization.state, organization.zipcode,
    organization.phone_number, organization.fax_number,
    organization.parent_organization, organization.subsidizing_organization, 
    organization.organizational_status,
    organization.nsic_code, organization.other_nsic_code,
    organization.contact_name, organization.email,
    *payment_fields
  ]
end

